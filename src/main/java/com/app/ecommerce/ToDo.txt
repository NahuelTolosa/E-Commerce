ToDo

○User story/brief:

● Contendrá las rutas necesarias que permitan listar los productos existentes,
ingresar productos nuevos, borrar y modificar sus detalles, así como interactuar
con el carrito de compras.
    - CRUD de productos.

● Se implementará una API RESTful con los verbos GET, POST, PUT y DELETE
para cumplir con todas las acciones necesarias.

● Debe brindar al frontend un mecanismo de ingreso autorizado al sistema
basado en JWT (Json Web Token).

● Los productos ingresados se almacenarán en una base de datos MongoDB.

● El usuario podrá registrar sus credenciales de acceso (email y password) para
luego poder ingresar a su cuenta. Estas credenciales serán guardadas en la
base de datos MongoDB encriptando la contraseña.
    - CRUD de usuarios. (Lo principal Crear y Obtener)

● El cliente tendrá una sesión activa de usuario con tiempo de expiración
configurable.
    - JWT se puede configurar el tiempo de vida del token

● Se enviará un mail a una casilla configurable, por cada registro nuevo de usuario
y con cada orden de compra generada.

/////////////////////////////////////////////////////////////////////////////////////////////

● Inicio:

    ○ Para ingresar al sistema se debe enviar una petición a la ruta ‘/login’ y
    los datos a enviar son email y password. Y devolverá un JWT para
    usarlo en todas las peticiones al sistema.

    ○ Para registrar un usuario se debe enviar una petición a la ruta ‘/user’. Y
    consta del nombre completo del cliente, número telefónico, email y
    campo de password duplicado para verificar coincidencia.

    ○ Para agregar items al carrito se debe usar la ruta ‘/carrito/add’
        ■ En el cuerpo se debe mandar: code, cantidad.

    ○ Para listar los items del carrito se debe usar la ruta ‘/carrito’.

    ○ Se podrán modificar y borrar por su id a través de la ruta /carrito/:id.


/////////////////////////////////////////////////////////////////////////////////////////////

● Redis: Con cada login que realiza el usuario verificar:

    ○ Si el usuario existe en redis, devolver el token JWT

    ○ Si el usuario no existe en Redis:
        ■ Guardar en redis el usuario con el token.
        ■ Key: username
        ■ Value: Token generado con JWT.
        ■ El tiempo de expiración del token es de 30 minutos en Redis.
        ■ Ir a la base de Datos para verificar las credenciales.

/////////////////////////////////////////////////////////////////////////////////////////////

● Log: cada request al finalizar o si hay una excepción mostrar en un log.info:
    ○ log.info en caso de éxito el método ejecutado y la fecha de ejecución.
    ○ log.error en caso de error el método ejecutado, la fecha de ejecución y
    el mensaje de la excepción.

/////////////////////////////////////////////////////////////////////////////////////////////

● MongoDB:
    ○ Implementar al menos estas colecciones:

        ■ usuarios: clientes registrados

        ■ productos: catálogo completo
            ● Link para foto (puede almacenarse de modo estático en
            la página en una subruta /images/:productoid )
            (Opcional)
            ● P̶r̶e̶c̶i̶o̶ ̶u̶n̶i̶t̶a̶r̶i̶o̶
            ● D̶e̶s̶c̶r̶i̶p̶c̶i̶ó̶n̶
            ● C̶a̶t̶e̶g̶o̶r̶í̶a̶

        ■ c̶a̶r̶r̶i̶t̶o̶:̶ ̶o̶r̶d̶e̶n̶ ̶t̶e̶m̶p̶o̶r̶a̶l̶ ̶d̶e̶ ̶c̶o̶m̶p̶r̶a̶
            ● E̶m̶a̶i̶l̶
            ● F̶e̶c̶h̶a̶ ̶y̶ ̶h̶o̶r̶a̶
            ● I̶t̶e̶m̶s̶ ̶c̶o̶n̶ ̶s̶u̶s̶ ̶c̶a̶n̶t̶i̶d̶a̶d̶e̶s̶

        ■̶ o̶r̶d̶e̶n̶e̶s̶:̶ ̶l̶a̶s̶ ̶ó̶r̶d̶e̶n̶e̶s̶ ̶g̶e̶n̶e̶r̶a̶d̶a̶s̶,̶ ̶q̶u̶e̶ ̶d̶e̶b̶e̶n̶ ̶i̶n̶c̶l̶u̶i̶r̶ ̶l̶o̶s̶ p̶r̶o̶d̶u̶c̶t̶o̶s̶,̶ ̶d̶e̶s̶c̶r̶i̶p̶c̶i̶o̶n̶e̶s̶ ̶y̶ ̶l̶o̶s̶ ̶p̶r̶e̶c̶i̶o̶s̶ ̶a̶l̶ ̶m̶o̶m̶e̶n̶t̶o̶ ̶d̶e̶ ̶l̶a̶ c̶o̶m̶p̶r̶a̶.̶
            ●̶ Í̶t̶e̶m̶s̶:̶ ̶l̶a̶s̶ ̶ó̶r̶d̶e̶n̶e̶s̶ ̶d̶e̶b̶e̶n̶ ̶p̶o̶d̶e̶r̶ ̶t̶e̶n̶e̶r̶ ̶p̶r̶o̶d̶u̶c̶t̶o̶s̶ s̶u̶r̶t̶i̶d̶o̶s̶,̶ ̶c̶a̶d̶a̶ ̶u̶n̶o̶ ̶c̶o̶n̶ ̶s̶u̶ ̶c̶a̶n̶t̶i̶d̶a̶d̶.̶ ̶P̶o̶r̶ ̶e̶j̶e̶m̶p̶l̶o̶:̶ r̶e̶m̶e̶r̶a̶s̶ ̶x̶ ̶2̶ ̶y̶ ̶g̶o̶r̶r̶a̶ ̶x̶ ̶1̶
            ●̶ N̶ú̶m̶e̶r̶o̶ ̶d̶e̶ ̶o̶r̶d̶e̶n̶:̶ ̶S̶e̶ ̶e̶x̶t̶r̶a̶e̶ ̶d̶e̶ ̶l̶a̶ ̶c̶a̶n̶t̶i̶d̶a̶d̶ ̶d̶e̶ ̶ó̶r̶d̶e̶n̶e̶s̶ a̶l̶m̶a̶c̶e̶n̶a̶d̶a̶s̶
            ●̶ F̶e̶c̶h̶a̶ ̶y̶ ̶h̶o̶r̶a̶
            ●̶ E̶s̶t̶a̶d̶o̶ ̶(̶ ̶p̶o̶r̶ ̶d̶e̶f̶e̶c̶t̶o̶ ̶e̶n̶ ̶‘̶g̶e̶n̶e̶r̶a̶d̶a̶’̶)̶
            ●̶ E̶m̶a̶i̶l̶ ̶d̶e̶ ̶q̶u̶i̶é̶n̶ ̶r̶e̶a̶l̶i̶z̶ó̶ ̶l̶a̶ ̶o̶r̶d̶e̶n̶.̶
            ●̶ D̶i̶r̶e̶c̶c̶i̶ó̶n̶ ̶d̶e̶ ̶e̶n̶t̶r̶e̶g̶a̶

/////////////////////////////////////////////////////////////////////////////////////////////

● Finalizada la orden, enviar un mail a la dirección de mi cuenta con los detalles
de la orden.

/////////////////////////////////////////////////////////////////////////////////////////////

● Se dispondrá de un archivo de configuración externo con opciones para
desarrollo y otras para producción. Como parámetros de configuración estará
el  ̶p̶u̶e̶r̶t̶o̶ ̶d̶e̶ ̶e̶s̶c̶u̶c̶h̶a̶ ̶d̶e̶l̶ ̶s̶e̶r̶v̶i̶d̶o̶r̶,̶ ̶l̶a̶ ̶u̶r̶l̶ ̶d̶e̶ ̶l̶a̶ ̶b̶a̶s̶e̶ ̶d̶e̶ ̶d̶a̶t̶o̶s̶,̶ ̶e̶l̶ ̶m̶a̶i̶l̶ ̶q̶u̶e̶
   ̶r̶e̶c̶i̶b̶i̶r̶á̶ ̶n̶o̶t̶i̶f̶i̶c̶a̶c̶i̶o̶n̶e̶s̶ ̶d̶e̶l̶ ̶b̶a̶c̶k̶e̶n̶d̶,̶ tiempo de expiración de sesión y los que
sea necesario incluir.